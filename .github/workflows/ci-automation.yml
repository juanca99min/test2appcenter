name: Build and Test Android App
on:
  push:
env:
  ANDROID_API: 28
  ANDROID_EMULATOR_NAME: Nexus_5X_API_29
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: setup JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle
      - name: Set up Android SDK
        run: |
          sudo apt-get update && sudo apt-get install unzip
          wget https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip
          unzip sdk-tools-linux-4333796.zip -d android-sdk
          echo 'export ANDROID_HOME=$PWD/android-sdk' >> $GITHUB_ENV
          echo 'export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools' >> $GITHUB_ENV
        env:
          JAVA_HOME: /usr/lib/jvm/java-8-openjdk-amd64
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Build app
        run: ./gradlew assemble
      - name: Store APK
        uses: actions/upload-artifact@v2
        with:
          name: app-debug.apk
          path: app/build/outputs/apk/debug/app-debug.apk
  test:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download APK
        uses: actions/download-artifact@v2
        with:
          name: app-debug.apk
      - name: Check if file exists
        run: |
          if [ ! -f ../app-debug.apk ]; then
            echo "File app-debug.apk not found"
          fi
          echo "File app-debug.apk found"
      - name: Check if file exists 2
        run: |
          if [ ! -f app-debug.apk ]; then
            echo "File app-debug.apk not found2"
            exit 1
          fi
          echo "File app-debug.apk found2"
      - name: Setup SSH
        uses: MrSquaare/ssh-setup-action@v1
        with:
          host: github.com
          private-key: ${{ secrets.PAT_ACTIONS }}
      - name: Clone repository
        run: git clone --branch test-android-team git@github.com:99minutos/Automation_App_Veloz.git
      - name: Copy APK
        run: cp app-debug.apk Automation_App_Veloz/src/test/resources/app.apk
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Install Android SDK
        run: |
          sudo apt-get update && sudo apt-get install unzip
          wget https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip
          unzip sdk-tools-linux-4333796.zip -d android-sdk
          echo 'export ANDROID_HOME=$PWD/android-sdk' >> $GITHUB_ENV
          echo 'export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools' >> $GITHUB_ENV
          export PATH=$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools:$PATH

        env:
          JAVA_HOME: /usr/lib/jvm/java-8-openjdk-amd64
      - name: Create Android Emulator
        run: |
          source $GITHUB_ENV
          echo no | $ANDROID_HOME/tools/bin/android create avd --force -n Nexus_5X_API_29 -k "system-images;android-28;google_apis;x86"

      - name: Start Emulator
        run: |
          emulator -avd ${{ env.ANDROID_EMULATOR_NAME }} -no-audio -no-window &

      - name: Wait for emulator to be ready
        run: |
          adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'

      - name: Run Tests
        run: ./gradlew connectedCheck
      - name: Set up Appium
        run: |
          npm install -g appium

      - name: Run Appium tests
        run: |
          appium &
          cd Automation_App_Veloz
          ./gradlew clean test
